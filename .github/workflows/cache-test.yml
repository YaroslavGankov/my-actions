name: "Terraform"

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #   paths:
  #      - 'workspaces/tf-live-shared/**'
  #      - '.github/workflows/tf-live-shared.yml'
  # pull_request:
  #   branches: [ main ]
  #   paths:
  #      - 'workspaces/tf-live-shared/**'
  #      - '.github/workflows/tf-live-shared.yml'

jobs:
  terraform1:
    name: "main-job-ololo"
    runs-on: ubuntu-latest
    env:
      PATH_TERRAFORM_PROVIDER: ".terraform/providers/"
    defaults:
      run:
        working-directory: tf-origins/ #my tf-files
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true
          terraform_version: 1.2.5

      - name: ls -la
        run: |
          echo -e ":.terraform:\n"
          ls -la .terraform
          echo -e ":${{ PATH_TERRAFORM_PROVIDER }}:\n"
          ls -la .terraform/providers/
          echo -e "\ntest -d:\n"
#          ${{ [[ ! -d  PATH_TERRAFORM_PROVIDER ]] ; echo $? }}
      
      - name: First Terraform Init for cache
        if: ${{ [[ ! -d env.PATH_TERRAFORM_PROVIDER ]] }}
        #if: ${{ echo $([ -d snap ] ; echo $?) }}        
        id: first_init
        run: |
          echo "startuem"
          terraform init

      - name: Check_Cache_Terraform_Providers
        id: cache_providers
        uses: actions/cache@v3
        with:
          path: ${{ PATH_TERRAFORM_PROVIDER }}**
          #key checks file providers.tf and cached files from path '.terraform/providers/**'. If any of them was changed, new cache will be created
          key: ${{ runner.os }}-tf_providers-${{ hashFiles('providers.tf') }}-${{ hashFiles('.terraform/providers/**') }}

      - name: ls -la
        run: |
          echo -e ":.terraform:\n"
          ls -la .terraform
          echo -e ":${{ PATH_TERRAFORM_PROVIDER }}:\n"
          ls -la .terraform/providers/
          echo -e "\ntest -d:\n"
          [[ ! -d ${{ PATH_TERRAFORM_PROVIDER }} ]] ; echo $?

      - name: Terraform Init
        if: ${{ steps.cache_providers.outputs.cache-hit != 'true' }}
        id: init
        run: terraform init

      - name: ls -la
        run: |
          echo -e ":.terraform:\n"
          ls -la .terraform
          echo -e ":${{ PATH_TERRAFORM_PROVIDER }}:\n"
          ls -la .terraform/providers/
          echo -e "\ntest -d:\n"
          [[ ! -d ${{ PATH_TERRAFORM_PROVIDER }} ]] ; echo $?

      - name: Terraform Plan
        # id: plan
        run: terraform plan -no-color -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false